name: Security Pipeline

on:
  workflow_dispatch: 
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-scan:
    runs-on: self-hosted
    services:
      web:
        image: mcr.microsoft.com/dotnet/aspnet:7.0
        ports:
          - 5000:80

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0'  # adjust to match your SDK

      - name: Restore dependencies
        run: dotnet restore ./vulnerableService/vulnerableService.csproj
      
      - name: Build
        run: dotnet build --no-restore ./vulnerableService/vulnerableService.csproj
      
      - name: Run Web API
        run: |
          dotnet run --no-build --project ./vulnerableService/vulnerableService.csproj &
          sleep 10  # give the API time to start
      
      #####################################
      # üîê Gitleaks - secrets scan
      #####################################
      - name: Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --verbose --redact
        continue-on-error: true
      
      #####################################
      # üîê Semgrep - static analysis
      #####################################
      
      - name: Login to Semgrep
        run: |
          semgrep logout
          SEMGREP_APP_TOKEN=${{ secrets.SEMGREP_TOKEN }} 
          semgrep login
      
      - name: Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: p/owasp-top-ten, semgrep.yml, p/security-audit, p/csharp
      
      #####################################
      # üîê CodeQL - static analysis
      #####################################
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: csharp
          
      - name: Build C# solution manually
        run: dotnet build ./vulnerableService/vulnerableService.csproj  --configuration Release

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
      
      #####################################
      # üîê Snyk - dependency scan (NuGet)
      #####################################
      - name: Snyk Scan
        uses: snyk/actions/dotnet@0.4.0
        with:
          args: test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      
#      #####################################
#      # üîê Trivy - container scan
#      #####################################
#      - name: Build Docker image
#        run: docker build -t my-api .  # Add a Dockerfile in your repo
#
#      - name: Trivy Image Scan
#        uses: aquasecurity/trivy-action@master
#        with:
#          image-ref: my-api
#          format: table
#          ignore-unfixed: true
#          vuln-type: os,library
      
      #####################################
      # üîê OWASP ZAP - DAST scan
      #####################################
      - name: OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'http://localhost:5000/swagger/index.html'
